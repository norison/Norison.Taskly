name: taskly

networks:
  taskly-network:
    driver: bridge

volumes:
  elastic-data:
    driver: local
  todos-db-data:
    driver: local

services:
  # ---------------------------
  # OpenTelemetry Collector
  # ---------------------------
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "4317:4317"
    networks:
      - taskly-network
  
  # ---------------------------
  # Zipkin for Traces
  # ---------------------------
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - taskly-network
  
  # ---------------------------
  # Elasticsearch for Logs
  # ---------------------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - taskly-network
  
  # ---------------------------
  # Kibana for Log Visualization
  # ---------------------------
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - taskly-network
  
  # ---------------------------
  # Prometheus for Metrics
  # ---------------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.enable-remote-write-receiver"  # Enable remote write receiver
    ports:
      - "9090:9090"
    networks:
      - taskly-network

  # ---------------------------
  # Grafana for Metrics Visualization
  # ---------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - taskly-network
  
  # ---------------------------
  # Todos API Database
  # ---------------------------
  todos-db:
    image: postgres
    container_name: todos-db
    environment:
      - POSTGRES_USER=${TODOS_DB_USER}
      - POSTGRES_PASSWORD=${TODOS_DB_PASSWORD}
      - POSTGRES_DB=${TODOS_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - todos-db-data:/var/lib/postgresql/data
    networks:
      - taskly-network
  
  # ---------------------------
  # Todos API
  # ---------------------------
  todos-api:
    build:
      context: ../
      dockerfile: ./.docker/dockerfiles/TodosApi.Dockerfile
    container_name: todos-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - ConnectionStrings__TodosDb=${TODOS_DB_CONNECTION_STRING}
    ports:
      - "8080:8080"
    networks:
      - taskly-network