name: taskly

networks:
  default_network:
    driver: bridge

volumes:
  taskly-db-data:
    driver: local

services:
  
  # ---------------------------
  # Redis
  # ---------------------------
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - default_network
  
  # ---------------------------
  # OpenTelemetry Collector
  # ---------------------------
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    networks:
      - default_network
  
  # ---------------------------
  # Prometheus for Metrics
  # ---------------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.enable-remote-write-receiver"  # Enable remote write receiver
    ports:
      - "9090:9090"
    networks:
      - default_network

  # ---------------------------
  # Grafana for Metrics Visualization
  # ---------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboard.yaml
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - default_network
  
  # ---------------------------
  # Database
  # ---------------------------
  taskly-db:
    image: postgres
    container_name: taskly-db
    environment:
      - POSTGRES_USER=${TASKLY_DB_USER}
      - POSTGRES_PASSWORD=${TASKLY_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - taskly-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${TASKLY_DB_USER}" ]
    networks:
      - default_network
  
  # ---------------------------
  # Todos API
  # ---------------------------
  todos-api:
    build:
      context: ../
      dockerfile: ./.docker/dockerfiles/TodosApi.Dockerfile
    container_name: todos-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - ConnectionStrings__TodosDb=${TODOS_DB_CONNECTION_STRING}
    depends_on:
      taskly-db:
        condition: service_healthy
    networks:
      - default_network

  # ---------------------------
  # Identity API
  # ---------------------------
  identity-api:
    build:
      context: ../
      dockerfile: ./.docker/dockerfiles/IdentityApi.Dockerfile
    container_name: identity-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - ConnectionStrings__IdentityDb=${IDENTITY_DB_CONNECTION_STRING}
      - ConnectionStrings__Redis=${REDIS_CONNECTION_STRING}
    depends_on:
      taskly-db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - default_network
  
  # ---------------------------
  # Gateway
  # ---------------------------
  gateway-api:
    build:
      context: ../
      dockerfile: ./.docker/dockerfiles/Gateway.Dockerfile
    container_name: gateway-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - ConnectionStrings__Redis=${REDIS_CONNECTION_STRING}
      - ReverseProxy__Clusters__identity-api-cluster__Destinations__destination1__Address=http://identity-api:8080
      - ReverseProxy__Clusters__todos-api-cluster__Destinations__destination1__Address=http://todos-api:8080
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_started
    networks:
      - default_network
  
  # ---------------------------
  # Web Client
  # ---------------------------
  web-client:
    build:
      context: ../
      dockerfile: ./.docker/dockerfiles/WebClient.Dockerfile
    container_name: web-client
    environment:
      - VITE_BASE_URL=http://gateway-api:8080
    ports:
      - "3500:80"
    networks:
      - default_network